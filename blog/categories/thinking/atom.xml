<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Thinking | smilevchy's blog]]></title>
  <link href="http://smilevchy.github.io/blog/categories/thinking/atom.xml" rel="self"/>
  <link href="http://smilevchy.github.io/"/>
  <updated>2018-05-13T23:11:03+08:00</updated>
  <id>http://smilevchy.github.io/</id>
  <author>
    <name><![CDATA[smilevchy]]></name>
    <email><![CDATA[smilevchy@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[克服惰性]]></title>
    <link href="http://smilevchy.github.io/blog/2018/04/29/way-to-overcome-laziness/"/>
    <updated>2018-04-29T20:37:26+08:00</updated>
    <id>http://smilevchy.github.io/blog/2018/04/29/way-to-overcome-laziness</id>
    <content type="html"><![CDATA[<p>“去年的计划又是一个都没有完成！”</p>

<p>“明天是周末了，我要好好学习”。周末来了：看漫画、看视频、拿手机刷刷刷……；临睡前：天哪，今天我到底干嘛了，说好的学习的！
……</p>

<!-- more -->


<p>以上场景在我身上出现好几回了，虽然我知道，人都是有惰性的，但是，我越来越深刻地觉得，我的惰性程度有点大。</p>

<p>客观上来说，我不是那种毫无规划地活着的人，我会不断给自己设定短期目标。我有个『每周干什么』计划表，每个周日晚上或者周一早上我都会就新的一周要做什么主线事件制定计划。这个计划表持续了好几年。前面的几年执行效果不错，基本上我都能完成每周计划的大部分事件。最近的一两年，我发现每周计划上的事件大部分都是未完成状态。我后来进行了反思分析，是不是计划任务量过大、是不是计划任务实现难度超出当时个人能力水平？最后我分析得出的结论是，不是我完成不了每周计划，而是我有了惰性。</p>

<p>一个人生活的环境越发安逸，越发容易产生惰性，惰性很容易积累，从 1 开始日积月累，后面慢慢变成 100、1000、10000…… 。</p>

<p>我已清晰意识到了惰性对我的侵蚀这件事，于是我开始找寻克服惰性的方法。</p>

<p>目前我找到的克服惰性的方法就是：习惯。</p>

<p><strong>依靠习惯的力量，就能够克服惰性</strong>。</p>

<p>把那些做了能有效提升个人的事情培养成一种习惯，当某种行为成为习惯后，以后自己就能下意识地完成这件事。即使说有惰性，也影响不了，因为习惯的力量是很大的。这个我深有体会，我举个自己的例子，我上高中时，很容易感冒，然后就要用到纸巾，但是一般人都是固定放置纸巾的，因此每当 要用纸巾却发现手头没有时，那种感觉很抓狂。于是当时我就开始常备 4 张纸巾带在身上，雷打不动地每天坚持着做这件事。后来的情况是我根本不用刻意去想这件事了，只要一出门，就会下意识地带点纸巾在身上。没有任何精神负担，完全是下意识的动作。『带纸巾』这件事已经成功被我培养成习惯了。而这个习惯给我带来的好处是我去哪里都不用担心没纸巾用，而且周围的人需要用纸时都能第一时间想到我，尤其是很多女生对于随身带纸巾的男生都会有好评。所以说，我是确确实实地相信习惯的力量。</p>

<p>因此，我会逐渐把『完成每周干什么计划表』这件事培养成习惯。我相信，当这件事成为习惯后，以后计划表上就不会那么容易出现任务未完成的情况了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thinking in Whether Programmers Should Stay Up Late]]></title>
    <link href="http://smilevchy.github.io/blog/2014/08/23/thinking-in-whether-programmers-should-stay-up-late/"/>
    <updated>2014-08-23T10:31:39+08:00</updated>
    <id>http://smilevchy.github.io/blog/2014/08/23/thinking-in-whether-programmers-should-stay-up-late</id>
    <content type="html"><![CDATA[<p>&ldquo;你平时几点睡觉啊&rdquo;</p>

<p>“11点左右吧”</p>

<p>“啊，那么早啊，不是说程序员都要熬夜吗”</p>

<p>“&hellip;&hellip;”</p>

<p>“你这样还是程序员吗？”</p>

<p>“&hellip;&hellip;”</p>

<!-- more -->


<p>周围很多人都认为：“程序员就要熬夜，不熬夜的不是程序员”。
不仅很多非 IT 人士持有这种观点，而且很多 IT 人士也不知怎么地也认同这一观点并且付诸以实践。</p>

<p>对于这个问题，我感到很不解。
熬夜和是否是程序员真的有那么深刻的相关关系吗？
是谁说一定要熬夜才能算是程序员的。
我不知道那些随口就说出“程序员就需要熬夜”的人是否有经过自己的思考的，或许因为周围的环境都那样，很多人都那样说，所以他们也糊里糊涂地跟风，然后就经常快乐地在夜深人静的时空里和自己的电脑进行思想的交流。</p>

<p>至于我自己，则是进行了一定的思考的。</p>

<p>我在此鲜明并独立地断言，“熬夜和是否是程序员没有深刻的相关关系”。</p>

<p>程序员的使命是充当机器与现实世界的连接层，他们负责把现实世界的问题建模并诉诸机器。
所以说，只要能完成这一连接，就是程序员。至于完成的时间点，这些根本就构不成关键因素。</p>

<p>这个问题也类似于“求最优解”。现在，在可能集里有两个解：</p>

<pre><code>一个是熬夜，通宵赶代码，获得的 side effect(bad)则是第二天精疲力尽，头脑不清晰，影响当天的工作，给自己的身体积累了不良性；

另一个则是 10 点睡觉，然后早上 6 - 7 点醒， 获得的 side effect(good) 则是精力充沛，头脑清晰，符合养生之道，而且照样有那段安静的时间可以写代码。
</code></pre>

<p>明明就有多种组合，为什么一定要选择那条性价比最低的呢？当然，有些人的 side effect 是不一样的，或许他熬夜之后还能保持战斗力甚至更甚之。</p>

<p>我只是想说，如果有另一条更好的方法可选，为什么一定要选择那条不好的，就因为周围大家都那么做，然后就跟着做了？</p>

<p>程序员这一职业本来就就要脑力和体力，为了能够更加持续性地发挥自己的智力，应该多注意体力的保持，而不是爆发性地榨干自身体力。</p>
]]></content>
  </entry>
  
</feed>
