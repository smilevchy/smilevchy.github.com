<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Algorithm | smilevchy's blog]]></title>
  <link href="http://smilevchy.github.io/blog/categories/algorithm/atom.xml" rel="self"/>
  <link href="http://smilevchy.github.io/"/>
  <updated>2014-11-20T15:42:02+08:00</updated>
  <id>http://smilevchy.github.io/</id>
  <author>
    <name><![CDATA[smilevchy]]></name>
    <email><![CDATA[smilevchy@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Leetcode_Merge Two Sorted Lists]]></title>
    <link href="http://smilevchy.github.io/blog/2014/11/20/leetcode-merge-two-sorted-lists/"/>
    <updated>2014-11-20T15:41:09+08:00</updated>
    <id>http://smilevchy.github.io/blog/2014/11/20/leetcode-merge-two-sorted-lists</id>
    <content type="html"><![CDATA[<p>原题链接: <a href="https://oj.leetcode.com/problems/merge-two-sorted-lists/">https://oj.leetcode.com/problems/merge-two-sorted-lists/</a></p>

<!-- more -->


<pre><code>public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
    if (l1 == null) return l2;
    if (l2 == null) return l1;

    ListNode cursorLeft = l1;
    ListNode cursorRight = l2;
    ListNode prevLeft = null;

    while (cursorRight != null) {
        while (cursorLeft != null &amp;&amp; cursorLeft.val &lt;= cursorRight.val) {
            prevLeft = cursorLeft;
            cursorLeft = cursorLeft.next;
        }

        if (prevLeft == null) {
            l2 = cursorRight.next;
            cursorRight.next = l1;
            l1 = cursorRight;
            cursorRight = l2;
        } else if (cursorLeft == null) {
            l2 = cursorRight.next;
            cursorRight.next = null;
            prevLeft.next = cursorRight;
            cursorRight = l2;
        } else {
            l2 = cursorRight.next;
            cursorRight.next = cursorLeft;
            prevLeft.next = cursorRight;
            cursorRight = l2;
        }

        cursorLeft = l1;
    }

    return l1;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Leetcode_Add Binary]]></title>
    <link href="http://smilevchy.github.io/blog/2014/11/20/leetcode-add-binary/"/>
    <updated>2014-11-20T14:51:16+08:00</updated>
    <id>http://smilevchy.github.io/blog/2014/11/20/leetcode-add-binary</id>
    <content type="html"><![CDATA[<p>原题链接: <a href="https://oj.leetcode.com/problems/add-binary/">https://oj.leetcode.com/problems/add-binary/</a></p>

<!-- more -->


<pre><code>public String addBinary(String a, String b) {
    if (a == null &amp;&amp; b == null) return null;

    StringBuilder sb = new StringBuilder(a);

    int i = sb.length() - 1;
    int j = b.length() - 1;
    int carry = 0;
    char ac;
    char bc;

    while (i &gt;= 0 &amp;&amp; j &gt;= 0) {
        ac = sb.charAt(i);
        bc = b.charAt(j);

        sb.setCharAt(i, (char) ('0' + (ac - '0' + bc - '0' + carry) % 2));
        carry = (ac - '0' + bc - '0' + carry) / 2;

        i--;
        j--;
    }

    while (i &gt;= 0) {
        ac = sb.charAt(i);
        sb.setCharAt(i, (char) ('0' + (ac - '0' + carry) % 2));
        carry = (ac - '0' + carry) / 2;
        i--;
    }

    while (j &gt;= 0) {
        bc = b.charAt(j);
        sb.insert(0, (char) ('0' + (bc - '0' + carry) % 2));
        carry = (bc - '0' + carry) / 2;
        j--;
    }

    if (carry &gt; 0) {
        sb.insert(0, '1');
    }

    return sb.toString();
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Leetcode_Climbing Stairs]]></title>
    <link href="http://smilevchy.github.io/blog/2014/11/20/leetcode-climbing-stairs/"/>
    <updated>2014-11-20T11:52:56+08:00</updated>
    <id>http://smilevchy.github.io/blog/2014/11/20/leetcode-climbing-stairs</id>
    <content type="html"><![CDATA[<p>原题链接: <a href="https://oj.leetcode.com/problems/climbing-stairs/">https://oj.leetcode.com/problems/climbing-stairs/</a></p>

<!-- more -->


<pre><code>public int climbStairs(int n) {
    if (n &lt;= 0) return 0;

    if (n == 1) {
        return 1;
    } else if (n == 2) {
        return 2;
    }

    int a = 1;
    int b = 2;
    int c = 0;

    for (int i = 3; i &lt;= n; i++) {
        c = a + b;
        a = b;
        b = c;
    }

    return c;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Leetcode_Remove Element]]></title>
    <link href="http://smilevchy.github.io/blog/2014/11/20/leetcode-remove-element/"/>
    <updated>2014-11-20T11:19:55+08:00</updated>
    <id>http://smilevchy.github.io/blog/2014/11/20/leetcode-remove-element</id>
    <content type="html"><![CDATA[<p>原题链接: <a href="https://oj.leetcode.com/problems/remove-element/">https://oj.leetcode.com/problems/remove-element/</a></p>

<!-- more -->


<pre><code>public int removeElement(int[] A, int elem) {
    if (A == null || A.length == 0) return 0;

    int length = A.length;
    int index = 0;

    for (int i = 0; i &lt; length; i++) {
        if (A[i] == elem) {
            A[index] = A[length - 1];
            i--;
            length--;
        } else {
            index++;
        }
    }

    return index;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Leetcode_Remove Duplicates From Sorted Array]]></title>
    <link href="http://smilevchy.github.io/blog/2014/11/20/leetcode-remove-duplicates-from-sorted-array/"/>
    <updated>2014-11-20T10:24:22+08:00</updated>
    <id>http://smilevchy.github.io/blog/2014/11/20/leetcode-remove-duplicates-from-sorted-array</id>
    <content type="html"><![CDATA[<p>原题链接: <a href="https://oj.leetcode.com/problems/remove-duplicates-from-sorted-array/">https://oj.leetcode.com/problems/remove-duplicates-from-sorted-array/</a></p>

<!-- more -->


<pre><code>public int removeDuplicates(int[] A) {
    if (A == null || A.length == 0) return 0;

    int index = 1;

    for (int i = 1, length = A.length; i &lt; length; i++) {
        if (A[i] != A[i - 1]) {
            A[index] = A[i];
            index++;
        }
    }

    return index;
}
</code></pre>
]]></content>
  </entry>
  
</feed>
