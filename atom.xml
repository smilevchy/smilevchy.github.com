<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[smilevchy's blog]]></title>
  <link href="http://smilevchy.github.io/atom.xml" rel="self"/>
  <link href="http://smilevchy.github.io/"/>
  <updated>2014-07-21T19:16:32+08:00</updated>
  <id>http://smilevchy.github.io/</id>
  <author>
    <name><![CDATA[smilevchy]]></name>
    <email><![CDATA[smilevchy@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress 下中文的处理]]></title>
    <link href="http://smilevchy.github.io/blog/2014/07/20/octopresss-handling-chinese-character/"/>
    <updated>2014-07-20T21:24:11+08:00</updated>
    <id>http://smilevchy.github.io/blog/2014/07/20/octopresss-handling-chinese-character</id>
    <content type="html"><![CDATA[<p>安装好 Octopress 后，想要发布一篇带有中文字符的文章，结果发现在 &ldquo;rake generate&rdquo; 阶段就遇到错误。
在网上搜寻一番，大家给出的几种处理方式大致如下：</p>

<ol>
<li><p>设置环境变量</p>

<blockquote><p>LC_ALL=zh_CN.UTF-8</p>

<p>LANG=zh_CN.UTF-8</p></blockquote>

<p> 或者</p>

<blockquote><p>LC_ALL=en_US.UTF-8</p>

<p>LANG=en_US.UTF-8</p></blockquote>

<p> <!-- more --></p></li>
<li><p>修改 Ruby 安装目录下的 convertible.rb 和 include.rb</p>

<p> 分别在其中找到一句代码类似 self.content = File.read(File.join(base, name), &hellip;) 的，这句代码的行数依据不同版本会不一样的。
 将其改为self.content = File.read(File.join(base, name), :encoding => &lsquo;utf-8&rsquo;)</p></li>
<li>转换该文章的编码格式为 UTF-8 无 BOM 编码格式</li>
</ol>


<p>本人都试验了以上的方法，发现 1 和 2 对于我的配置不设置也可以，而 3 则是必须的。这个可能看个人的配置而有所变化。</p>

<p>目前也只是一种 workaround，具体的处理还需要花点时间学习下这个框架。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nginx_config_url_match]]></title>
    <link href="http://smilevchy.github.io/blog/2014/07/20/nginx-config-url-match/"/>
    <updated>2014-07-20T15:15:10+08:00</updated>
    <id>http://smilevchy.github.io/blog/2014/07/20/nginx-config-url-match</id>
    <content type="html"><![CDATA[<p>location smiley_019.png {</p>

<pre><code>root html/image;
</code></pre>

<p>}</p>

<p>location ~.(gif|jpg|png)$ {</p>

<pre><code>root E:/Pictures;
</code></pre>

<p>}</p>

<p>In this condition, it will just match the latter, nor the former, which lacks a slash( must be added if it is not regex description)</p>

<hr />

<!-- more -->


<p>after you add it:</p>

<p>location /smiley_019.png {</p>

<pre><code>root html/image;
</code></pre>

<p>}</p>

<p>location ~.(gif|jpg|png)$ {</p>

<pre><code>root E:/Pictures;
</code></pre>

<p>}</p>

<p>In this condition, it will not match the former again because of nginx&rsquo;s matching rules about location.
Here, the latter will override the former.</p>

<hr />

<p>So, you need</p>

<p>1.Exact Match</p>

<p>location = /smiley_019.png {</p>

<pre><code>root html/image;
</code></pre>

<p>}</p>

<p>2.Override the match of latter regex match</p>

<p>location ^~ /smiley_019.png {</p>

<pre><code>root html/image;
</code></pre>

<p>}</p>

<p>Thus, the former match will not be overrided by the latter.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Test]]></title>
    <link href="http://smilevchy.github.io/blog/2014/07/20/test/"/>
    <updated>2014-07-20T14:11:09+08:00</updated>
    <id>http://smilevchy.github.io/blog/2014/07/20/test</id>
    <content type="html"><![CDATA[<p>It is a test.</p>

<p><em>Hello Github Pages.</em></p>
]]></content>
  </entry>
  
</feed>
